<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Panelak.Database.Oracle</name>
    </assembly>
    <members>
        <member name="T:Panelak.Database.Oracle.OracleConditionStringBuilder">
            <summary>
            Oracle condition string builder
            </summary>
        </member>
        <member name="F:Panelak.Database.Oracle.OracleConditionStringBuilder.builder">
            <summary>
            Managed Oracle command builder
            </summary>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConditionStringBuilder.GetParamName(System.String)">
            <summary>
            Returns Oracle prefixed parameter name
            </summary>
            <param name="name">Parameter name</param>
            <returns>Oracle prefixed parameter name</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConditionStringBuilder.GetQuotedIdentifier(System.String)">
            <summary>
            Returns Oracle quoted column identifier
            </summary>
            <param name="identifier">Column identifier</param>
            <returns>Oracle quoted column identifier</returns>
        </member>
        <member name="T:Panelak.Database.Oracle.OracleConnection">
            <summary>
            Oracle specific connection driver
            </summary>
        </member>
        <member name="F:Panelak.Database.Oracle.OracleConnection.sqlBuilder">
            <summary>
            Oracle SQL builder
            </summary>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.#ctor(System.String,Panelak.Database.IDtoMapper,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Panelak.Database.Oracle.OracleConnection"/> class.
            </summary>
            <param name="connectionString">Connection string</param>
            <param name="mapper">DTO mapper</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Panelak.Database.Oracle.OracleConnection"/> class with
            a default DTO mapper.
            </summary>
            <param name="connectionString">Connection string</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="P:Panelak.Database.Oracle.OracleConnection.DatabaseType">
            <summary>
            Gets the Oracle database type
            </summary>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.TryGetPrimaryKeyForTableAsync(Panelak.Sql.ISqlTableIdentifier,System.String@)">
            <summary>
            Attempts to return a primary key for given Oracle table.
            </summary>
            <param name="table">Table identifier</param>
            <param name="primaryKey">Primary key identifier</param>
            <returns>True whether the attempt to find a primary key succeeded</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.GetFirstColumnNameAsync(Panelak.Sql.ISqlTableIdentifier)">
            <summary>
            Returns the name of the first column in given oracle table
            </summary>
            <param name="table">Table identifier</param>
            <returns>Name of the first column</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.GetTotalRecords(Panelak.Sql.ISqlSelectQuery)">
            <summary>
            Returns a total number of records in a given table.
            </summary>
            <param name="sqlQuery">SQL SELECT query model</param>
            <returns>Number of total records</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.CheckIfTableExists(Panelak.Sql.ISqlTableIdentifier)">
            <summary>
            Checks if table exists in Oracle database
            </summary>
            <param name="tableIdentifier">Table identifier model</param>
            <returns>True if table exists</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.CheckIfColumnExists(Panelak.Sql.ISqlTableIdentifier,System.String)">
            <summary>
            Checks if column exists in Oracle database
            </summary>
            <param name="tableIdentifier">Table identifier</param>
            <param name="column">Column identifier</param>
            <returns>True if column exists</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.BuildQuery(Panelak.Sql.ISqlSelectQuery)">
            <summary>
            Converts SQL SELECT query model into the Oracle SQL parameterized query
            </summary>
            <param name="sqlQuery">SQL SELECT query model</param>
            <returns>Parameterized Oracle query</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.BuildCountQuery(Panelak.Sql.ISqlSelectQuery)">
            <summary>
            Builds a COUNT query for checking the number of rows from a given SQL SELECT query model.
            </summary>
            <param name="sqlQuery">SQL SELECT query model</param>
            <returns>Parameterized Oracle query</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.GetConnectionProtected(System.String)">
            <summary>
            Returns the Oracle managed connection for given connection string
            </summary>
            <param name="connectionString">Connection string</param>
            <returns>Oracle managed connection</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.GetDataAdapterForCommand(System.Data.Common.DbCommand)">
            <summary>
            Returns the Oracle managed data adapter for given command
            </summary>
            <param name="command">Oracle command to enter the data adapter</param>
            <returns>The oracle data adapter</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.GetParameterToken">
            <summary>
            Returns the parameter token used to prefix the parameters in queries with regexes
            </summary>
            <returns>The parameter token</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleConnection.GetPrimaryKeyForTableAsync(Panelak.Sql.ISqlTableIdentifier)">
            <summary>
            Returns the primary key for given table
            </summary>
            <param name="table">Table identifier</param>
            <returns>Primary key</returns>
        </member>
        <member name="T:Panelak.Database.Oracle.OracleDbQuery">
            <summary>
            Local implementation of SQL query with parameters
            </summary>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleDbQuery.#ctor(System.String,System.Collections.Generic.IEnumerable{Panelak.Sql.ISqlParameter})">
            <summary>
            Initializes a new instance of the <see cref="T:Panelak.Database.Oracle.OracleDbQuery"/> class.
            </summary>
            <param name="query">SQL query</param>
            <param name="enumerable">SQL parameters</param>
        </member>
        <member name="P:Panelak.Database.Oracle.OracleDbQuery.QueryText">
            <summary>
            Gets the SQL query string
            </summary>
        </member>
        <member name="P:Panelak.Database.Oracle.OracleDbQuery.SqlParameters">
            <summary>
            Gets the SQL query parameters
            </summary>
        </member>
        <member name="T:Panelak.Database.Oracle.OracleSqlBuilder">
            <summary>
            SQL builder for building Oracle SQL queries
            </summary>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleSqlBuilder.#ctor(Panelak.Database.Oracle.OracleConnection,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Panelak.Database.Oracle.OracleSqlBuilder"/> class.
            </summary>
            <param name="connection">Oracle connection</param>
            <param name="log">Logger instance</param>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleSqlBuilder.BuildQuery(Panelak.Sql.ISqlSelectQuery)">
            <summary>
            Creates an Oracle parameterized query with an SQL text from given <see cref="T:Panelak.Sql.ISqlSelectQuery"/>
            </summary>
            <param name="sqlQuery">SQL query model</param>
            <returns>Parameterized query model</returns>
        </member>
        <member name="M:Panelak.Database.Oracle.OracleSqlBuilder.GetColumns(Panelak.Sql.ISqlSelectQuery)">
            <summary>
            Returns string representation of Oracle quoted columns
            </summary>
            <param name="sqlQuery">SQL query model</param>
            <returns>Joined string of SQL SELECT columns</returns>
        </member>
    </members>
</doc>
